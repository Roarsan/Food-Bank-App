@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Food Banks Map</title>
    <style>
        /* Reset default margin and padding for the body */
        body {
            margin: 0;
            padding: 0;
        }

        /* Styling for the map container */
        #map {
            height: 80vh; /* Adjust the map height as needed */
            width: 100%;
        }

        /* Styling for the info window content */
        .marker-info {
            max-width: 200px;
        }
    </style>
    <!-- Include the Google Maps API script with the provided API key -->
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA0W1wpBWHpQPPanumQmE3KLi2O3hNMqU8&callback=initMap" async defer></script>
</head>
<body>
    <!-- Container to display the map -->
    <div id="map"></div>

    <!-- JavaScript script for initializing the map and fetching data from the API -->
    <script>
        function initMap() {
            // Create a new map instance with default center and zoom level
            var map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: 51.509865, lng: -0.118092 }, // Default center (London)
                zoom: 10
            });

            // Fetch data from the food bank API
            fetch('https://www.givefood.org.uk/api/2/locations/')
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Failed to fetch data from the API');
                    }
                    return response.json();
                })
                .then(data => {
                    // Check the actual structure of the API response and adjust the code accordingly
                    if (data && Array.isArray(data)) {
                        // Flatten the array of arrays
                        const locations = data.flat();

                        // Loop through the food bank locations and add markers to the map
                        locations.forEach(location => {
                            // Split the lat_lng string into separate latitude and longitude
                            const [lat, lng] = location.lat_lng.split(',');

                            // Create a marker for each food bank with custom styling
                            var marker = new google.maps.Marker({
                                position: { lat: parseFloat(lat), lng: parseFloat(lng) },
                                map: map,
                                title: location.name,
                                icon: {
                                    path: google.maps.SymbolPath.CIRCLE,
                                    scale: 6,
                                    fillColor: 'green',
                                    fillOpacity: 1,
                                    strokeWeight: 0
                                }
                            });

                            // Add an info window to display details of the food bank
                            var infowindow = new google.maps.InfoWindow({
                                content: '<div class="marker-info"><strong>' + location.name + '</strong><br>' +
                                    'Address: ' + location.address + '<br>' +
                                    'Phone: ' + location.phone + '<br>' +
                                    'Email: ' + location.email + '</div>'
                            });

                            // Attach the info window to the marker
                            marker.addListener('click', function () {
                                infowindow.open(map, marker);
                            });
                        });
                    } else {
                        console.error('Invalid API response structure');
                    }
                })
                .catch(error => {
                    console.error('Error fetching data from the API:', error);
                });

            // Add marker for the user's current location if geolocation is supported
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var userMarker = new google.maps.Marker({
                        position: { lat: position.coords.latitude, lng: position.coords.longitude },
                        map: map,
                        title: 'Your Location',
                        icon: {
                            path: google.maps.SymbolPath.CIRCLE,
                            scale: 8,
                            fillColor: 'blue',
                            fillOpacity: 1,
                            strokeWeight: 0
                        }
                    });

                    // Add an info window for the user's marker
                    var userInfowindow = new google.maps.InfoWindow({
                        content: '<div class="marker-info"><strong>Your Location</strong></div>'
                    });

                    // Attach the info window to the user's marker
                    userMarker.addListener('click', function () {
                        userInfowindow.open(map, userMarker);
                    });
                }, function () {
                    console.error('Error getting the user\'s location.');
                });
            }
        }
    </script>
</body>
</html>
